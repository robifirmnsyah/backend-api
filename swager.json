{
  "openapi": "3.0.0",
  "info": {
    "title": "Express API",
    "version": "1.0.0",
    "description": "API documentation for your Express app"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_user": {
                        "type": "string"
                      },
                      "role": {
                        "type": "string"
                      },
                      "full_name": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "string"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "billing_id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "full_name": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                },
                "required": ["full_name", "username", "password", "company_id", "email", "phone"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "400": {
            "description": "Missing required fields"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A user object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id_user": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "full_name": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "string"
                    },
                    "company_name": {
                      "type": "string"
                    },
                    "billing_id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the user",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "full_name": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/customers": {
      "get": {
        "tags": ["Customers"],
        "summary": "Get all customers",
        "responses": {
          "200": {
            "description": "A list of customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "company_id": {
                        "type": "string"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "billing_id": {
                        "type": "string"
                      },
                      "maintenance": {
                        "type": "string"
                      },
                      "limit_ticket": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Customers"],
        "summary": "Create a new customer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_name": {
                    "type": "string"
                  },
                  "billing_id": {
                    "type": "string"
                  },
                  "maintenance": {
                    "type": "string"
                  },
                  "limit_ticket": {
                    "type": "integer"
                  }
                },
                "required": ["company_name", "billing_id", "maintenance", "limit_ticket"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Company name, billing ID, maintenance, and limit_ticket are required"
          }
        }
      }
    },
    "/api/customers/{company_id}": {
      "get": {
        "tags": ["Customers"],
        "summary": "Get a customer by company_id",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "required": true,
            "description": "The company_id of the customer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A customer object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "company_id": {
                      "type": "string"
                    },
                    "company_name": {
                      "type": "string"
                    },
                    "billing_id": {
                      "type": "string"
                    },
                    "maintenance": {
                      "type": "string"
                    },
                    "limit_ticket": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Customer not found"
          }
        }
      },
      "put": {
        "tags": ["Customers"],
        "summary": "Update a customer",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "required": true,
            "description": "The company_id of the customer",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_name": {
                    "type": "string"
                  },
                  "billing_id": {
                    "type": "string"
                  },
                  "maintenance": {
                    "type": "string"
                  },
                  "limit_ticket": {
                    "type": "integer"
                  }
                },
                "required": ["company_name", "billing_id", "maintenance", "limit_ticket"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer updated successfully"
          },
          "404": {
            "description": "Customer not found"
          },
          "400": {
            "description": "Company name, billing ID, maintenance, and limit_ticket are required"
          }
        }
      },
      "delete": {
        "tags": ["Customers"],
        "summary": "Delete a customer",
        "parameters": [
          {
            "name": "company_id",
            "in": "path",
            "required": true,
            "description": "The company_id of the customer to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer deleted successfully"
          },
          "404": {
            "description": "Customer not found"
          }
        }
      }
    },
    "/api/tickets": {
      "get": {
        "tags": ["Tickets"],
        "summary": "Get all tickets",
        "responses": {
          "200": {
            "description": "A list of tickets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ticket_id": {
                        "type": "string"
                      },
                      "product_list": {
                        "type": "string"
                      },
                      "describe_issue": {
                        "type": "string"
                      },
                      "detail_issue": {
                        "type": "string"
                      },
                      "priority": {
                        "type": "string"
                      },
                      "contact": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "string"
                      },
                      "company_name": {
                        "type": "string"
                      },
                      "attachment": {
                        "type": "string"
                      },
                      "id_user": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tickets"],
        "summary": "Create a new ticket",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "string"
                  },
                  "product_list": {
                    "type": "string"
                  },
                  "describe_issue": {
                    "type": "string"
                  },
                  "detail_issue": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "string"
                  },
                  "contact": {
                    "type": "string"
                  },
                  "id_user": {
                    "type": "string"
                  }
                },
                "required": ["company_id", "product_list", "describe_issue", "detail_issue", "priority", "contact", "id_user"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ticket created successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "500": {
            "description": "Database error"
          }
        }
      }
    },
    "/api/tickets/{ticket_id}": {
      "get": {
        "tags": ["Tickets"],
        "summary": "Get a ticket by ID",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "description": "The unique ID of the ticket",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ticket_id": {
                      "type": "string"
                    },
                    "product_list": {
                      "type": "string"
                    },
                    "describe_issue": {
                      "type": "string"
                    },
                    "detail_issue": {
                      "type": "string"
                    },
                    "priority": {
                      "type": "string"
                    },
                    "contact": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "string"
                    },
                    "company_name": {
                      "type": "string"
                    },
                    "attachment": {
                      "type": "string"
                    },
                    "id_user": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Ticket not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Tickets"],
        "summary": "Update a ticket",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "description": "The ID of the ticket to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_id": {
                    "type": "string"
                  },
                  "company_name": {
                    "type": "string"
                  },
                  "product_list": {
                    "type": "string"
                  },
                  "describe_issue": {
                    "type": "string"
                  },
                  "detail_issue": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "string"
                  },
                  "contact": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string"
                  }
                },
                "required": ["company_id", "company_name", "product_list", "describe_issue", "detail_issue", "priority", "contact", "status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ticket updated successfully"
          },
          "404": {
            "description": "Ticket not found"
          },
          "500": {
            "description": "Database error"
          }
        }
      },
      "delete": {
        "tags": ["Tickets"],
        "summary": "Delete a ticket",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "description": "The ID of the ticket to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ticket deleted successfully"
          },
          "404": {
            "description": "Ticket not found"
          }
        }
      }
    },
    "/api/tickets/comment/{ticket_id}": {
      "post": {
        "tags": ["Tickets"],
        "summary": "Add a comment to a ticket",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "description": "The ID of the ticket to add a comment to",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id_user": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "string"
                  }
                },
                "required": ["id_user", "comment"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment added successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "500": {
            "description": "Database error"
          }
        }
      },
      "get": {
        "tags": ["Tickets"],
        "summary": "Get comments for a ticket",
        "parameters": [
          {
            "name": "ticket_id",
            "in": "path",
            "required": true,
            "description": "The ID of the ticket to get comments for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id_user": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get all projects",
        "responses": {
          "200": {
            "description": "A list of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "project_id": {
                        "type": "string"
                      },
                      "project_name": {
                        "type": "string"
                      },
                      "billing_id": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Projects"],
        "summary": "Create a new project",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_id": {
                    "type": "string"
                  },
                  "project_name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  }
                },
                "required": ["project_id", "project_name", "company_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully"
          },
          "400": {
            "description": "Missing required fields"
          }
        }
      }
    },
    "/api/projects/{project_id}": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get a project by ID",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "description": "The ID of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A project object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "project_id": {
                      "type": "string"
                    },
                    "project_name": {
                      "type": "string"
                    },
                    "billing_id": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "put": {
        "tags": ["Projects"],
        "summary": "Update a project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "description": "The ID of the project",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "project_name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  }
                },
                "required": ["project_name", "company_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully"
          },
          "404": {
            "description": "Project not found"
          }
        }
      },
      "delete": {
        "tags": ["Projects"],
        "summary": "Delete a project",
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "description": "The ID of the project to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted successfully"
          },
          "404": {
            "description": "Project not found"
          }
        }
      }
    },
    "/api/groups": {
      "get": {
        "tags": ["Groups"],
        "summary": "Get all groups",
        "responses": {
          "200": {
            "description": "A list of groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "group_id": {
                        "type": "string"
                      },
                      "group_name": {
                        "type": "string"
                      },
                      "company_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Groups"],
        "summary": "Create a new group",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group_name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  }
                },
                "required": ["group_name", "company_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group created successfully"
          },
          "400": {
            "description": "Missing required fields"
          }
        }
      }
    },
    "/api/groups/{group_id}": {
      "get": {
        "tags": ["Groups"],
        "summary": "Get a group by ID",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "description": "The ID of the group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A group object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "group_id": {
                      "type": "string"
                    },
                    "group_name": {
                      "type": "string"
                    },
                    "company_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Group not found"
          }
        }
      },
      "put": {
        "tags": ["Groups"],
        "summary": "Update a group",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "description": "The ID of the group",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "group_name": {
                    "type": "string"
                  },
                  "company_id": {
                    "type": "string"
                  }
                },
                "required": ["group_name", "company_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group updated successfully"
          },
          "404": {
            "description": "Group not found"
          }
        }
      },
      "delete": {
        "tags": ["Groups"],
        "summary": "Delete a group",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "description": "The ID of the group to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Group deleted successfully"
          },
          "404": {
            "description": "Group not found"
          }
        }
      }
    },
    "/api/services": {
      "get": {
        "summary": "Retrieve all services",
        "description": "Fetch a list of all available services.",
        "tags": ["Services"],
        "responses": {
          "200": {
            "description": "Services retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Services retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "service_name": {
                            "type": "string",
                            "example": "Compute Engine"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "message": "Services retrieved successfully",
                  "data": [
                    {
                      "id": 1,
                      "service_name": "Compute Engine"
                    },
                    {
                      "id": 2,
                      "service_name": "Google Kubernetes Engine"
                    },
                    {
                      "id": 3,
                      "service_name": "Cloud Run"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Database error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
